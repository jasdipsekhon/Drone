ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"freertos.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/freertos.c"
  19              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
  20              		.align	1
  21              		.global	vApplicationStackOverflowHook
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	vApplicationStackOverflowHook:
  27              	.LVL0:
  28              	.LFB354:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** 
  25:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/freertos.c **** 
  28:Core/Src/freertos.c **** /* USER CODE END Includes */
  29:Core/Src/freertos.c **** 
  30:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s 			page 2


  31:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/freertos.c **** 
  33:Core/Src/freertos.c **** /* USER CODE END PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* USER CODE END PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  42:Core/Src/freertos.c **** 
  43:Core/Src/freertos.c **** /* USER CODE END PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* USER CODE END Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* Hook prototypes */
  56:Core/Src/freertos.c **** void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);
  57:Core/Src/freertos.c **** void vApplicationMallocFailedHook(void);
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** /* USER CODE BEGIN 4 */
  60:Core/Src/freertos.c **** void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
  61:Core/Src/freertos.c **** {
  29              		.loc 1 61 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  62:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
  63:Core/Src/freertos.c ****    configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
  64:Core/Src/freertos.c ****    called if a stack overflow is detected. */
  65:Core/Src/freertos.c **** }
  34              		.loc 1 65 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE354:
  39              		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
  40              		.align	1
  41              		.global	vApplicationMallocFailedHook
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	vApplicationMallocFailedHook:
  47              	.LFB355:
  66:Core/Src/freertos.c **** /* USER CODE END 4 */
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* USER CODE BEGIN 5 */
  69:Core/Src/freertos.c **** void vApplicationMallocFailedHook(void)
  70:Core/Src/freertos.c **** {
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s 			page 3


  48              		.loc 1 70 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  71:Core/Src/freertos.c ****    /* vApplicationMallocFailedHook() will only be called if
  72:Core/Src/freertos.c ****    configUSE_MALLOC_FAILED_HOOK is set to 1 in FreeRTOSConfig.h. It is a hook
  73:Core/Src/freertos.c ****    function that will get called if a call to pvPortMalloc() fails.
  74:Core/Src/freertos.c ****    pvPortMalloc() is called internally by the kernel whenever a task, queue,
  75:Core/Src/freertos.c ****    timer or semaphore is created. It is also called by various parts of the
  76:Core/Src/freertos.c ****    demo application. If heap_1.c or heap_2.c are used, then the size of the
  77:Core/Src/freertos.c ****    heap available to pvPortMalloc() is defined by configTOTAL_HEAP_SIZE in
  78:Core/Src/freertos.c ****    FreeRTOSConfig.h, and the xPortGetFreeHeapSize() API function can be used
  79:Core/Src/freertos.c ****    to query the size of free heap space that remains (although it does not
  80:Core/Src/freertos.c ****    provide information on how the remaining heap might be fragmented). */
  81:Core/Src/freertos.c **** }
  53              		.loc 1 81 1 view .LVU3
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE355:
  58              		.text
  59              	.Letext0:
  60              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s 			page 4


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s:20     .text.vApplicationStackOverflowHook:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s:26     .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s:40     .text.vApplicationMallocFailedHook:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccKxk3bt.s:46     .text.vApplicationMallocFailedHook:00000000 vApplicationMallocFailedHook

NO UNDEFINED SYMBOLS
