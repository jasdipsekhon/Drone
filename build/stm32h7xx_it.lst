ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/stm32h7xx_it.c"
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB350:
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h7xx_it.c ****   *
  16:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32h7xx_it.c ****   */
  18:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32h7xx_it.c **** 
  20:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h7xx_it.c **** #include "main.h"
  22:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32h7xx_it.c **** 
  27:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32h7xx_it.c **** 
  30:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32h7xx_it.c **** 
  35:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32h7xx_it.c **** 
  37:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32h7xx_it.c **** 
  40:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32h7xx_it.c **** 
  42:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32h7xx_it.c **** 
  45:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32h7xx_it.c **** 
  47:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32h7xx_it.c **** 
  50:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32h7xx_it.c **** 
  52:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32h7xx_it.c **** 
  55:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32h7xx_it.c **** 
  57:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  60:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  61:Core/Src/stm32h7xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  62:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  63:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  64:Core/Src/stm32h7xx_it.c **** extern SPI_HandleTypeDef hspi1;
  65:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_uart4_rx;
  66:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_uart4_tx;
  67:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_rx;
  68:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_tx;
  69:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart4;
  70:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart3;
  71:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart6;
  72:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim6;
  73:Core/Src/stm32h7xx_it.c **** 
  74:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  75:Core/Src/stm32h7xx_it.c **** 
  76:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  77:Core/Src/stm32h7xx_it.c **** 
  78:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  79:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  80:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  81:Core/Src/stm32h7xx_it.c **** /**
  82:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  83:Core/Src/stm32h7xx_it.c ****   */
  84:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  85:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 85 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 3


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  86:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  87:Core/Src/stm32h7xx_it.c **** 
  88:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  89:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  90:Core/Src/stm32h7xx_it.c ****    while (1)
  35              		.loc 1 90 4 view .LVU1
  91:Core/Src/stm32h7xx_it.c ****   {
  92:Core/Src/stm32h7xx_it.c ****   }
  36              		.loc 1 92 3 view .LVU2
  90:Core/Src/stm32h7xx_it.c ****   {
  37              		.loc 1 90 10 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE350:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HardFault_Handler:
  50              	.LFB351:
  93:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  94:Core/Src/stm32h7xx_it.c **** }
  95:Core/Src/stm32h7xx_it.c **** 
  96:Core/Src/stm32h7xx_it.c **** /**
  97:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  98:Core/Src/stm32h7xx_it.c ****   */
  99:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
 100:Core/Src/stm32h7xx_it.c **** {
  51              		.loc 1 100 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
 101:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 102:Core/Src/stm32h7xx_it.c **** 
 103:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 104:Core/Src/stm32h7xx_it.c ****   while (1)
  58              		.loc 1 104 3 view .LVU5
 105:Core/Src/stm32h7xx_it.c ****   {
 106:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 107:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 108:Core/Src/stm32h7xx_it.c ****   }
  59              		.loc 1 108 3 view .LVU6
 104:Core/Src/stm32h7xx_it.c ****   {
  60              		.loc 1 104 9 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE351:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 4


  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MemManage_Handler:
  73              	.LFB352:
 109:Core/Src/stm32h7xx_it.c **** }
 110:Core/Src/stm32h7xx_it.c **** 
 111:Core/Src/stm32h7xx_it.c **** /**
 112:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 113:Core/Src/stm32h7xx_it.c ****   */
 114:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 115:Core/Src/stm32h7xx_it.c **** {
  74              		.loc 1 115 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.L6:
 116:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 117:Core/Src/stm32h7xx_it.c **** 
 118:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 119:Core/Src/stm32h7xx_it.c ****   while (1)
  81              		.loc 1 119 3 view .LVU9
 120:Core/Src/stm32h7xx_it.c ****   {
 121:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 122:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 123:Core/Src/stm32h7xx_it.c ****   }
  82              		.loc 1 123 3 view .LVU10
 119:Core/Src/stm32h7xx_it.c ****   {
  83              		.loc 1 119 9 view .LVU11
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE352:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	BusFault_Handler:
  96              	.LFB353:
 124:Core/Src/stm32h7xx_it.c **** }
 125:Core/Src/stm32h7xx_it.c **** 
 126:Core/Src/stm32h7xx_it.c **** /**
 127:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 128:Core/Src/stm32h7xx_it.c ****   */
 129:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 130:Core/Src/stm32h7xx_it.c **** {
  97              		.loc 1 130 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 5


 103              	.L8:
 131:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 132:Core/Src/stm32h7xx_it.c **** 
 133:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 134:Core/Src/stm32h7xx_it.c ****   while (1)
 104              		.loc 1 134 3 view .LVU13
 135:Core/Src/stm32h7xx_it.c ****   {
 136:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 137:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 138:Core/Src/stm32h7xx_it.c ****   }
 105              		.loc 1 138 3 view .LVU14
 134:Core/Src/stm32h7xx_it.c ****   {
 106              		.loc 1 134 9 view .LVU15
 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE353:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB354:
 139:Core/Src/stm32h7xx_it.c **** }
 140:Core/Src/stm32h7xx_it.c **** 
 141:Core/Src/stm32h7xx_it.c **** /**
 142:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 143:Core/Src/stm32h7xx_it.c ****   */
 144:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 145:Core/Src/stm32h7xx_it.c **** {
 120              		.loc 1 145 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 146:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 147:Core/Src/stm32h7xx_it.c **** 
 148:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 149:Core/Src/stm32h7xx_it.c ****   while (1)
 127              		.loc 1 149 3 view .LVU17
 150:Core/Src/stm32h7xx_it.c ****   {
 151:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 152:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 153:Core/Src/stm32h7xx_it.c ****   }
 128              		.loc 1 153 3 view .LVU18
 149:Core/Src/stm32h7xx_it.c ****   {
 129              		.loc 1 149 9 view .LVU19
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE354:
 134              		.section	.text.DebugMon_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	DebugMon_Handler
 137              		.syntax unified
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 6


 138              		.thumb
 139              		.thumb_func
 141              	DebugMon_Handler:
 142              	.LFB355:
 154:Core/Src/stm32h7xx_it.c **** }
 155:Core/Src/stm32h7xx_it.c **** 
 156:Core/Src/stm32h7xx_it.c **** /**
 157:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 158:Core/Src/stm32h7xx_it.c ****   */
 159:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 160:Core/Src/stm32h7xx_it.c **** {
 143              		.loc 1 160 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 161:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Core/Src/stm32h7xx_it.c **** 
 163:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Core/Src/stm32h7xx_it.c **** 
 166:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Core/Src/stm32h7xx_it.c **** }
 148              		.loc 1 167 1 view .LVU21
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE355:
 153              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 154              		.align	1
 155              		.global	DMA1_Stream0_IRQHandler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DMA1_Stream0_IRQHandler:
 161              	.LFB356:
 168:Core/Src/stm32h7xx_it.c **** 
 169:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 170:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 171:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 172:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 173:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 174:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 175:Core/Src/stm32h7xx_it.c **** 
 176:Core/Src/stm32h7xx_it.c **** /**
 177:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 178:Core/Src/stm32h7xx_it.c ****   */
 179:Core/Src/stm32h7xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 180:Core/Src/stm32h7xx_it.c **** {
 162              		.loc 1 180 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 08B5     		push	{r3, lr}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 7


 181:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 182:Core/Src/stm32h7xx_it.c **** 
 183:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 184:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 171              		.loc 1 184 3 view .LVU23
 172 0002 0248     		ldr	r0, .L14
 173 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 174              	.LVL0:
 185:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 186:Core/Src/stm32h7xx_it.c **** 
 187:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 188:Core/Src/stm32h7xx_it.c **** }
 175              		.loc 1 188 1 is_stmt 0 view .LVU24
 176 0008 08BD     		pop	{r3, pc}
 177              	.L15:
 178 000a 00BF     		.align	2
 179              	.L14:
 180 000c 00000000 		.word	hdma_spi1_rx
 181              		.cfi_endproc
 182              	.LFE356:
 184              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
 185              		.align	1
 186              		.global	DMA1_Stream1_IRQHandler
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	DMA1_Stream1_IRQHandler:
 192              	.LFB357:
 189:Core/Src/stm32h7xx_it.c **** 
 190:Core/Src/stm32h7xx_it.c **** /**
 191:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 192:Core/Src/stm32h7xx_it.c ****   */
 193:Core/Src/stm32h7xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 194:Core/Src/stm32h7xx_it.c **** {
 193              		.loc 1 194 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 195:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 196:Core/Src/stm32h7xx_it.c **** 
 197:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 198:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 202              		.loc 1 198 3 view .LVU26
 203 0002 0248     		ldr	r0, .L18
 204 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 205              	.LVL1:
 199:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 200:Core/Src/stm32h7xx_it.c **** 
 201:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 202:Core/Src/stm32h7xx_it.c **** }
 206              		.loc 1 202 1 is_stmt 0 view .LVU27
 207 0008 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 8


 208              	.L19:
 209 000a 00BF     		.align	2
 210              	.L18:
 211 000c 00000000 		.word	hdma_spi1_tx
 212              		.cfi_endproc
 213              	.LFE357:
 215              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
 216              		.align	1
 217              		.global	DMA1_Stream2_IRQHandler
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 222              	DMA1_Stream2_IRQHandler:
 223              	.LFB358:
 203:Core/Src/stm32h7xx_it.c **** 
 204:Core/Src/stm32h7xx_it.c **** /**
 205:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream2 global interrupt.
 206:Core/Src/stm32h7xx_it.c ****   */
 207:Core/Src/stm32h7xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 208:Core/Src/stm32h7xx_it.c **** {
 224              		.loc 1 208 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 209:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */
 210:Core/Src/stm32h7xx_it.c **** 
 211:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 0 */
 212:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 233              		.loc 1 212 3 view .LVU29
 234 0002 0248     		ldr	r0, .L22
 235 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 236              	.LVL2:
 213:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */
 214:Core/Src/stm32h7xx_it.c **** 
 215:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 1 */
 216:Core/Src/stm32h7xx_it.c **** }
 237              		.loc 1 216 1 is_stmt 0 view .LVU30
 238 0008 08BD     		pop	{r3, pc}
 239              	.L23:
 240 000a 00BF     		.align	2
 241              	.L22:
 242 000c 00000000 		.word	hdma_i2c1_rx
 243              		.cfi_endproc
 244              	.LFE358:
 246              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 247              		.align	1
 248              		.global	DMA1_Stream3_IRQHandler
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	DMA1_Stream3_IRQHandler:
 254              	.LFB359:
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 9


 217:Core/Src/stm32h7xx_it.c **** 
 218:Core/Src/stm32h7xx_it.c **** /**
 219:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 220:Core/Src/stm32h7xx_it.c ****   */
 221:Core/Src/stm32h7xx_it.c **** void DMA1_Stream3_IRQHandler(void)
 222:Core/Src/stm32h7xx_it.c **** {
 255              		.loc 1 222 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 223:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 224:Core/Src/stm32h7xx_it.c **** 
 225:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 226:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 264              		.loc 1 226 3 view .LVU32
 265 0002 0248     		ldr	r0, .L26
 266 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 267              	.LVL3:
 227:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 228:Core/Src/stm32h7xx_it.c **** 
 229:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 230:Core/Src/stm32h7xx_it.c **** }
 268              		.loc 1 230 1 is_stmt 0 view .LVU33
 269 0008 08BD     		pop	{r3, pc}
 270              	.L27:
 271 000a 00BF     		.align	2
 272              	.L26:
 273 000c 00000000 		.word	hdma_i2c1_tx
 274              		.cfi_endproc
 275              	.LFE359:
 277              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 278              		.align	1
 279              		.global	DMA1_Stream4_IRQHandler
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	DMA1_Stream4_IRQHandler:
 285              	.LFB360:
 231:Core/Src/stm32h7xx_it.c **** 
 232:Core/Src/stm32h7xx_it.c **** /**
 233:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 234:Core/Src/stm32h7xx_it.c ****   */
 235:Core/Src/stm32h7xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 236:Core/Src/stm32h7xx_it.c **** {
 286              		.loc 1 236 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 10


 294              		.cfi_offset 14, -4
 237:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 238:Core/Src/stm32h7xx_it.c **** 
 239:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 240:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_rx);
 295              		.loc 1 240 3 view .LVU35
 296 0002 0248     		ldr	r0, .L30
 297 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 298              	.LVL4:
 241:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 242:Core/Src/stm32h7xx_it.c **** 
 243:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 244:Core/Src/stm32h7xx_it.c **** }
 299              		.loc 1 244 1 is_stmt 0 view .LVU36
 300 0008 08BD     		pop	{r3, pc}
 301              	.L31:
 302 000a 00BF     		.align	2
 303              	.L30:
 304 000c 00000000 		.word	hdma_usart6_rx
 305              		.cfi_endproc
 306              	.LFE360:
 308              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 309              		.align	1
 310              		.global	DMA1_Stream5_IRQHandler
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 315              	DMA1_Stream5_IRQHandler:
 316              	.LFB361:
 245:Core/Src/stm32h7xx_it.c **** 
 246:Core/Src/stm32h7xx_it.c **** /**
 247:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 248:Core/Src/stm32h7xx_it.c ****   */
 249:Core/Src/stm32h7xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 250:Core/Src/stm32h7xx_it.c **** {
 317              		.loc 1 250 1 is_stmt 1 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 08B5     		push	{r3, lr}
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 3, -8
 325              		.cfi_offset 14, -4
 251:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 252:Core/Src/stm32h7xx_it.c **** 
 253:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 254:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_tx);
 326              		.loc 1 254 3 view .LVU38
 327 0002 0248     		ldr	r0, .L34
 328 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 329              	.LVL5:
 255:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 256:Core/Src/stm32h7xx_it.c **** 
 257:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 258:Core/Src/stm32h7xx_it.c **** }
 330              		.loc 1 258 1 is_stmt 0 view .LVU39
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 11


 331 0008 08BD     		pop	{r3, pc}
 332              	.L35:
 333 000a 00BF     		.align	2
 334              	.L34:
 335 000c 00000000 		.word	hdma_usart6_tx
 336              		.cfi_endproc
 337              	.LFE361:
 339              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 340              		.align	1
 341              		.global	DMA1_Stream6_IRQHandler
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	DMA1_Stream6_IRQHandler:
 347              	.LFB362:
 259:Core/Src/stm32h7xx_it.c **** 
 260:Core/Src/stm32h7xx_it.c **** /**
 261:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 262:Core/Src/stm32h7xx_it.c ****   */
 263:Core/Src/stm32h7xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 264:Core/Src/stm32h7xx_it.c **** {
 348              		.loc 1 264 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              	.LCFI6:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 3, -8
 356              		.cfi_offset 14, -4
 265:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 266:Core/Src/stm32h7xx_it.c **** 
 267:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 268:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_uart4_rx);
 357              		.loc 1 268 3 view .LVU41
 358 0002 0248     		ldr	r0, .L38
 359 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 360              	.LVL6:
 269:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 270:Core/Src/stm32h7xx_it.c **** 
 271:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 272:Core/Src/stm32h7xx_it.c **** }
 361              		.loc 1 272 1 is_stmt 0 view .LVU42
 362 0008 08BD     		pop	{r3, pc}
 363              	.L39:
 364 000a 00BF     		.align	2
 365              	.L38:
 366 000c 00000000 		.word	hdma_uart4_rx
 367              		.cfi_endproc
 368              	.LFE362:
 370              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 371              		.align	1
 372              		.global	I2C1_EV_IRQHandler
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	I2C1_EV_IRQHandler:
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 12


 378              	.LFB363:
 273:Core/Src/stm32h7xx_it.c **** 
 274:Core/Src/stm32h7xx_it.c **** /**
 275:Core/Src/stm32h7xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 276:Core/Src/stm32h7xx_it.c ****   */
 277:Core/Src/stm32h7xx_it.c **** void I2C1_EV_IRQHandler(void)
 278:Core/Src/stm32h7xx_it.c **** {
 379              		.loc 1 278 1 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 08B5     		push	{r3, lr}
 384              	.LCFI7:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 279:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 280:Core/Src/stm32h7xx_it.c **** 
 281:Core/Src/stm32h7xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 282:Core/Src/stm32h7xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 388              		.loc 1 282 3 view .LVU44
 389 0002 0248     		ldr	r0, .L42
 390 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 391              	.LVL7:
 283:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 284:Core/Src/stm32h7xx_it.c **** 
 285:Core/Src/stm32h7xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 286:Core/Src/stm32h7xx_it.c **** }
 392              		.loc 1 286 1 is_stmt 0 view .LVU45
 393 0008 08BD     		pop	{r3, pc}
 394              	.L43:
 395 000a 00BF     		.align	2
 396              	.L42:
 397 000c 00000000 		.word	hi2c1
 398              		.cfi_endproc
 399              	.LFE363:
 401              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 402              		.align	1
 403              		.global	I2C1_ER_IRQHandler
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	I2C1_ER_IRQHandler:
 409              	.LFB364:
 287:Core/Src/stm32h7xx_it.c **** 
 288:Core/Src/stm32h7xx_it.c **** /**
 289:Core/Src/stm32h7xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 290:Core/Src/stm32h7xx_it.c ****   */
 291:Core/Src/stm32h7xx_it.c **** void I2C1_ER_IRQHandler(void)
 292:Core/Src/stm32h7xx_it.c **** {
 410              		.loc 1 292 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 08B5     		push	{r3, lr}
 415              	.LCFI8:
 416              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 13


 417              		.cfi_offset 3, -8
 418              		.cfi_offset 14, -4
 293:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 294:Core/Src/stm32h7xx_it.c **** 
 295:Core/Src/stm32h7xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 296:Core/Src/stm32h7xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 419              		.loc 1 296 3 view .LVU47
 420 0002 0248     		ldr	r0, .L46
 421 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 422              	.LVL8:
 297:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 298:Core/Src/stm32h7xx_it.c **** 
 299:Core/Src/stm32h7xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 300:Core/Src/stm32h7xx_it.c **** }
 423              		.loc 1 300 1 is_stmt 0 view .LVU48
 424 0008 08BD     		pop	{r3, pc}
 425              	.L47:
 426 000a 00BF     		.align	2
 427              	.L46:
 428 000c 00000000 		.word	hi2c1
 429              		.cfi_endproc
 430              	.LFE364:
 432              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 433              		.align	1
 434              		.global	SPI1_IRQHandler
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 439              	SPI1_IRQHandler:
 440              	.LFB365:
 301:Core/Src/stm32h7xx_it.c **** 
 302:Core/Src/stm32h7xx_it.c **** /**
 303:Core/Src/stm32h7xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 304:Core/Src/stm32h7xx_it.c ****   */
 305:Core/Src/stm32h7xx_it.c **** void SPI1_IRQHandler(void)
 306:Core/Src/stm32h7xx_it.c **** {
 441              		.loc 1 306 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 08B5     		push	{r3, lr}
 446              	.LCFI9:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 3, -8
 449              		.cfi_offset 14, -4
 307:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 308:Core/Src/stm32h7xx_it.c **** 
 309:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 310:Core/Src/stm32h7xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 450              		.loc 1 310 3 view .LVU50
 451 0002 0248     		ldr	r0, .L50
 452 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 453              	.LVL9:
 311:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 312:Core/Src/stm32h7xx_it.c **** 
 313:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 314:Core/Src/stm32h7xx_it.c **** }
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 14


 454              		.loc 1 314 1 is_stmt 0 view .LVU51
 455 0008 08BD     		pop	{r3, pc}
 456              	.L51:
 457 000a 00BF     		.align	2
 458              	.L50:
 459 000c 00000000 		.word	hspi1
 460              		.cfi_endproc
 461              	.LFE365:
 463              		.section	.text.USART3_IRQHandler,"ax",%progbits
 464              		.align	1
 465              		.global	USART3_IRQHandler
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	USART3_IRQHandler:
 471              	.LFB366:
 315:Core/Src/stm32h7xx_it.c **** 
 316:Core/Src/stm32h7xx_it.c **** /**
 317:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 318:Core/Src/stm32h7xx_it.c ****   */
 319:Core/Src/stm32h7xx_it.c **** void USART3_IRQHandler(void)
 320:Core/Src/stm32h7xx_it.c **** {
 472              		.loc 1 320 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI10:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 321:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 322:Core/Src/stm32h7xx_it.c **** 
 323:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 324:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 481              		.loc 1 324 3 view .LVU53
 482 0002 0248     		ldr	r0, .L54
 483 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 484              	.LVL10:
 325:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 326:Core/Src/stm32h7xx_it.c **** 
 327:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 328:Core/Src/stm32h7xx_it.c **** }
 485              		.loc 1 328 1 is_stmt 0 view .LVU54
 486 0008 08BD     		pop	{r3, pc}
 487              	.L55:
 488 000a 00BF     		.align	2
 489              	.L54:
 490 000c 00000000 		.word	huart3
 491              		.cfi_endproc
 492              	.LFE366:
 494              		.section	.text.DMA1_Stream7_IRQHandler,"ax",%progbits
 495              		.align	1
 496              		.global	DMA1_Stream7_IRQHandler
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 15


 501              	DMA1_Stream7_IRQHandler:
 502              	.LFB367:
 329:Core/Src/stm32h7xx_it.c **** 
 330:Core/Src/stm32h7xx_it.c **** /**
 331:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream7 global interrupt.
 332:Core/Src/stm32h7xx_it.c ****   */
 333:Core/Src/stm32h7xx_it.c **** void DMA1_Stream7_IRQHandler(void)
 334:Core/Src/stm32h7xx_it.c **** {
 503              		.loc 1 334 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507 0000 08B5     		push	{r3, lr}
 508              	.LCFI11:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 3, -8
 511              		.cfi_offset 14, -4
 335:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */
 336:Core/Src/stm32h7xx_it.c **** 
 337:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream7_IRQn 0 */
 338:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_uart4_tx);
 512              		.loc 1 338 3 view .LVU56
 513 0002 0248     		ldr	r0, .L58
 514 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 515              	.LVL11:
 339:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */
 340:Core/Src/stm32h7xx_it.c **** 
 341:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream7_IRQn 1 */
 342:Core/Src/stm32h7xx_it.c **** }
 516              		.loc 1 342 1 is_stmt 0 view .LVU57
 517 0008 08BD     		pop	{r3, pc}
 518              	.L59:
 519 000a 00BF     		.align	2
 520              	.L58:
 521 000c 00000000 		.word	hdma_uart4_tx
 522              		.cfi_endproc
 523              	.LFE367:
 525              		.section	.text.UART4_IRQHandler,"ax",%progbits
 526              		.align	1
 527              		.global	UART4_IRQHandler
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 532              	UART4_IRQHandler:
 533              	.LFB368:
 343:Core/Src/stm32h7xx_it.c **** 
 344:Core/Src/stm32h7xx_it.c **** /**
 345:Core/Src/stm32h7xx_it.c ****   * @brief This function handles UART4 global interrupt.
 346:Core/Src/stm32h7xx_it.c ****   */
 347:Core/Src/stm32h7xx_it.c **** void UART4_IRQHandler(void)
 348:Core/Src/stm32h7xx_it.c **** {
 534              		.loc 1 348 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538 0000 08B5     		push	{r3, lr}
 539              	.LCFI12:
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 16


 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 3, -8
 542              		.cfi_offset 14, -4
 349:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 0 */
 350:Core/Src/stm32h7xx_it.c **** 
 351:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UART4_IRQn 0 */
 352:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart4);
 543              		.loc 1 352 3 view .LVU59
 544 0002 0248     		ldr	r0, .L62
 545 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 546              	.LVL12:
 353:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 1 */
 354:Core/Src/stm32h7xx_it.c **** 
 355:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UART4_IRQn 1 */
 356:Core/Src/stm32h7xx_it.c **** }
 547              		.loc 1 356 1 is_stmt 0 view .LVU60
 548 0008 08BD     		pop	{r3, pc}
 549              	.L63:
 550 000a 00BF     		.align	2
 551              	.L62:
 552 000c 00000000 		.word	huart4
 553              		.cfi_endproc
 554              	.LFE368:
 556              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 557              		.align	1
 558              		.global	TIM6_DAC_IRQHandler
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 563              	TIM6_DAC_IRQHandler:
 564              	.LFB369:
 357:Core/Src/stm32h7xx_it.c **** 
 358:Core/Src/stm32h7xx_it.c **** /**
 359:Core/Src/stm32h7xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1_CH1 and DAC1_CH2 underrun error interr
 360:Core/Src/stm32h7xx_it.c ****   */
 361:Core/Src/stm32h7xx_it.c **** void TIM6_DAC_IRQHandler(void)
 362:Core/Src/stm32h7xx_it.c **** {
 565              		.loc 1 362 1 is_stmt 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 08B5     		push	{r3, lr}
 570              	.LCFI13:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 3, -8
 573              		.cfi_offset 14, -4
 363:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 364:Core/Src/stm32h7xx_it.c **** 
 365:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 366:Core/Src/stm32h7xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 574              		.loc 1 366 3 view .LVU62
 575 0002 0248     		ldr	r0, .L66
 576 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 577              	.LVL13:
 367:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 368:Core/Src/stm32h7xx_it.c **** 
 369:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 17


 370:Core/Src/stm32h7xx_it.c **** }
 578              		.loc 1 370 1 is_stmt 0 view .LVU63
 579 0008 08BD     		pop	{r3, pc}
 580              	.L67:
 581 000a 00BF     		.align	2
 582              	.L66:
 583 000c 00000000 		.word	htim6
 584              		.cfi_endproc
 585              	.LFE369:
 587              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 588              		.align	1
 589              		.global	DMA2_Stream0_IRQHandler
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	DMA2_Stream0_IRQHandler:
 595              	.LFB370:
 371:Core/Src/stm32h7xx_it.c **** 
 372:Core/Src/stm32h7xx_it.c **** /**
 373:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 374:Core/Src/stm32h7xx_it.c ****   */
 375:Core/Src/stm32h7xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 376:Core/Src/stm32h7xx_it.c **** {
 596              		.loc 1 376 1 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 08B5     		push	{r3, lr}
 601              	.LCFI14:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 3, -8
 604              		.cfi_offset 14, -4
 377:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 378:Core/Src/stm32h7xx_it.c **** 
 379:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 380:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 605              		.loc 1 380 3 view .LVU65
 606 0002 0248     		ldr	r0, .L70
 607 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 608              	.LVL14:
 381:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 382:Core/Src/stm32h7xx_it.c **** 
 383:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 384:Core/Src/stm32h7xx_it.c **** }
 609              		.loc 1 384 1 is_stmt 0 view .LVU66
 610 0008 08BD     		pop	{r3, pc}
 611              	.L71:
 612 000a 00BF     		.align	2
 613              	.L70:
 614 000c 00000000 		.word	hdma_adc1
 615              		.cfi_endproc
 616              	.LFE370:
 618              		.section	.text.USART6_IRQHandler,"ax",%progbits
 619              		.align	1
 620              		.global	USART6_IRQHandler
 621              		.syntax unified
 622              		.thumb
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 18


 623              		.thumb_func
 625              	USART6_IRQHandler:
 626              	.LFB371:
 385:Core/Src/stm32h7xx_it.c **** 
 386:Core/Src/stm32h7xx_it.c **** /**
 387:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART6 global interrupt.
 388:Core/Src/stm32h7xx_it.c ****   */
 389:Core/Src/stm32h7xx_it.c **** void USART6_IRQHandler(void)
 390:Core/Src/stm32h7xx_it.c **** {
 627              		.loc 1 390 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631 0000 08B5     		push	{r3, lr}
 632              	.LCFI15:
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 3, -8
 635              		.cfi_offset 14, -4
 391:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
 392:Core/Src/stm32h7xx_it.c **** 
 393:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 394:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart6);
 636              		.loc 1 394 3 view .LVU68
 637 0002 0248     		ldr	r0, .L74
 638 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 639              	.LVL15:
 395:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 1 */
 396:Core/Src/stm32h7xx_it.c **** 
 397:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART6_IRQn 1 */
 398:Core/Src/stm32h7xx_it.c **** }
 640              		.loc 1 398 1 is_stmt 0 view .LVU69
 641 0008 08BD     		pop	{r3, pc}
 642              	.L75:
 643 000a 00BF     		.align	2
 644              	.L74:
 645 000c 00000000 		.word	huart6
 646              		.cfi_endproc
 647              	.LFE371:
 649              		.text
 650              	.Letext0:
 651              		.file 2 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 652              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 653              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 654              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 655              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 656              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 657              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 658              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 659              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_it.c
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:20     .text.NMI_Handler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:26     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:43     .text.HardFault_Handler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:49     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:66     .text.MemManage_Handler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:72     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:89     .text.BusFault_Handler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:112    .text.UsageFault_Handler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:118    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:135    .text.DebugMon_Handler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:141    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:154    .text.DMA1_Stream0_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:160    .text.DMA1_Stream0_IRQHandler:00000000 DMA1_Stream0_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:180    .text.DMA1_Stream0_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:185    .text.DMA1_Stream1_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:191    .text.DMA1_Stream1_IRQHandler:00000000 DMA1_Stream1_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:211    .text.DMA1_Stream1_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:216    .text.DMA1_Stream2_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:222    .text.DMA1_Stream2_IRQHandler:00000000 DMA1_Stream2_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:242    .text.DMA1_Stream2_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:247    .text.DMA1_Stream3_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:253    .text.DMA1_Stream3_IRQHandler:00000000 DMA1_Stream3_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:273    .text.DMA1_Stream3_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:278    .text.DMA1_Stream4_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:284    .text.DMA1_Stream4_IRQHandler:00000000 DMA1_Stream4_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:304    .text.DMA1_Stream4_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:309    .text.DMA1_Stream5_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:315    .text.DMA1_Stream5_IRQHandler:00000000 DMA1_Stream5_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:335    .text.DMA1_Stream5_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:340    .text.DMA1_Stream6_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:346    .text.DMA1_Stream6_IRQHandler:00000000 DMA1_Stream6_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:366    .text.DMA1_Stream6_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:371    .text.I2C1_EV_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:377    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:397    .text.I2C1_EV_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:402    .text.I2C1_ER_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:408    .text.I2C1_ER_IRQHandler:00000000 I2C1_ER_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:428    .text.I2C1_ER_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:433    .text.SPI1_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:439    .text.SPI1_IRQHandler:00000000 SPI1_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:459    .text.SPI1_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:464    .text.USART3_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:470    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:490    .text.USART3_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:495    .text.DMA1_Stream7_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:501    .text.DMA1_Stream7_IRQHandler:00000000 DMA1_Stream7_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:521    .text.DMA1_Stream7_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:526    .text.UART4_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:532    .text.UART4_IRQHandler:00000000 UART4_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:552    .text.UART4_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:557    .text.TIM6_DAC_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:563    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:583    .text.TIM6_DAC_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:588    .text.DMA2_Stream0_IRQHandler:00000000 $t
ARM GAS  /var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s 			page 20


/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:594    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:614    .text.DMA2_Stream0_IRQHandler:0000000c $d
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:619    .text.USART6_IRQHandler:00000000 $t
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:625    .text.USART6_IRQHandler:00000000 USART6_IRQHandler
/var/folders/2r/ldzc7vgx4p51wnq3gxc1dn840000gn/T//ccrX4cVy.s:645    .text.USART6_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_spi1_rx
hdma_spi1_tx
hdma_i2c1_rx
hdma_i2c1_tx
hdma_usart6_rx
hdma_usart6_tx
hdma_uart4_rx
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
HAL_SPI_IRQHandler
hspi1
HAL_UART_IRQHandler
huart3
hdma_uart4_tx
huart4
HAL_TIM_IRQHandler
htim6
hdma_adc1
huart6
